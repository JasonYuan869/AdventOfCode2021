use std::env;

#[cfg(test)]
mod tests {
    use crate::*;
    
    const INPUT_SIZE: usize = 10;
    static INPUT: [u32; INPUT_SIZE] = [
        199,
        200,
        208,
        210,
        200,
        207,
        240,
        269,
        260,
        263,
    ];

    #[test]
    fn test_part1() {
        assert_eq!(part1(&INPUT, INPUT_SIZE), 7);
    }

    #[test]
    fn test_part2() {
        assert_eq!(part2(&INPUT, INPUT_SIZE), 5);
    }
}

// Include INPUTS array and INPUT_SIZE constant generated by build script
include!(concat!(env!("OUT_DIR"), "/input.rs"));

fn part1(input: &[u32], size: usize) -> u32 {
    let mut counter = 0_u32;
    for i in 1..size {
        if input[i] > input[i-1] {
            counter += 1;
        }
    }
    counter
}

fn part2(input: &[u32], size: usize) -> u32 {
    let mut counter = 0_u32;
    for i in 3..size {
        if input[i] > input[i-3] {
            counter += 1;
        }
    }
    counter
}

fn main() {
    println!("Part 1: {}", part1(&INPUT, INPUT_SIZE));
    println!("Part 2: {}", part2(&INPUT, INPUT_SIZE));   
}
